@model DeliveryService.Models.DeliverySearchModel

<body onload="getLocation()">
    <form asp-action="SearchForDeliveries">
        <div class="form-horizontal">
            <h4>Delivery search</h4>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">

                <input id="latitude" type="hidden" asp-for="Latitude" />
                <input id="longtitude" type="hidden" asp-for="Longtitude" />
                <label asp-for="PickUpWithin" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="PickUpWithin" class="form-control" /> miles
                    <span asp-validation-for="PickUpWithin" class="text-danger" />
                </div>
            </div>
            <div class="form-group">
                <label asp-for="DeliveryWithin" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input asp-for="DeliveryWithin" class="form-control" /> miles
                    <span asp-validation-for="DeliveryWithin" class="text-danger" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Search" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>
</body>

<p class="btn btn-default">@Html.ActionLink("See all available deliveries", "AllAvailableDeliveries", "DeliverySearch")</p>

<p>@Html.ActionLink("Back to dashboard", "Index", "DriverDashboard")</p>

<script>
    var latitude = document.getElementById("latitude");
    var longtitude = document.getElementById("longtitude");

function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition, showError);
    } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
}

function showPosition(position) {
    latitude.value = position.coords.latitude;
    longtitude.value =  position.coords.longitude;
}

function showError(error) {
    switch(error.code) {
        case error.PERMISSION_DENIED:
            x.innerHTML = "User denied the request for Geolocation."
            break;
        case error.POSITION_UNAVAILABLE:
            x.innerHTML = "Location information is unavailable."
            break;
        case error.TIMEOUT:
            x.innerHTML = "The request to get user location timed out."
            break;
        case error.UNKNOWN_ERROR:
            x.innerHTML = "An unknown error occurred."
            break;
    }
}
</script>