@model DeliveryService.Models.Entities.DriverHoliday

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/css/pikaday.css">
<h2>Edit a holiday</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="ID" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="From" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="From" type="text" id="datepickerFrom" class="form-control">
                <span asp-validation-for="From" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <label asp-for="To" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="To" type="text" id="datepickerTo" class="form-control">
                <span asp-validation-for="To" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="~/js/pikaday.js"></script>
<script type="text/javascript">

        var pickerFrom = new Pikaday({
            field: document.getElementById('datepickerFrom'),
            firstDay: 1,
            minDate: new Date(),
            maxDate: new Date(2020, 12, 31),
            yearRange: [2000, 2020],
            onClose: function () {
                console.log(pickerFrom.toString());
                document.getElementById("datepickerFrom").innerHTML = pickerFrom.toString();
            }
        });

        var pickerTo = new Pikaday({
            field: document.getElementById('datepickerTo'),
            firstDay: 1,
            minDate: new Date(),
            maxDate: new Date(2020, 12, 31),
            yearRange: [2000, 2020],
            onClose: function () {
                console.log(pickerTo.toString());
                document.getElementById("datepickerTo").innerHTML = pickerTo.toString();
            }
        });
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
